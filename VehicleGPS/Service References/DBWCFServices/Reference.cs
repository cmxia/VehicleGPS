//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18408
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace VehicleGPS.DBWCFServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DBWCFServices.IDBHelper")]
    public interface IDBHelper {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/YExecuteSql", ReplyAction="http://tempuri.org/IDBHelper/YExecuteSqlResponse")]
        string YExecuteSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/YExecuteSql", ReplyAction="http://tempuri.org/IDBHelper/YExecuteSqlResponse")]
        System.IAsyncResult BeginYExecuteSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql, System.AsyncCallback callback, object asyncState);
        
        string EndYExecuteSql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/YExecuteHis", ReplyAction="http://tempuri.org/IDBHelper/YExecuteHisResponse")]
        string YExecuteHis(string userid, System.DateTime starttime, System.DateTime endtime, string sim);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/YExecuteHis", ReplyAction="http://tempuri.org/IDBHelper/YExecuteHisResponse")]
        System.IAsyncResult BeginYExecuteHis(string userid, System.DateTime starttime, System.DateTime endtime, string sim, System.AsyncCallback callback, object asyncState);
        
        string EndYExecuteHis(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/YExecuteDBExits", ReplyAction="http://tempuri.org/IDBHelper/YExecuteDBExitsResponse")]
        string YExecuteDBExits(System.DateTime monthtime);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/YExecuteDBExits", ReplyAction="http://tempuri.org/IDBHelper/YExecuteDBExitsResponse")]
        System.IAsyncResult BeginYExecuteDBExits(System.DateTime monthtime, System.AsyncCallback callback, object asyncState);
        
        string EndYExecuteDBExits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/YExecuteReportSql", ReplyAction="http://tempuri.org/IDBHelper/YExecuteReportSqlResponse")]
        string YExecuteReportSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql, string isGeo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/YExecuteReportSql", ReplyAction="http://tempuri.org/IDBHelper/YExecuteReportSqlResponse")]
        System.IAsyncResult BeginYExecuteReportSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql, string isGeo, System.AsyncCallback callback, object asyncState);
        
        string EndYExecuteReportSql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BexecuteProc", ReplyAction="http://tempuri.org/IDBHelper/BexecuteProcResponse")]
        string BexecuteProc(string userid, string procName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BexecuteProc", ReplyAction="http://tempuri.org/IDBHelper/BexecuteProcResponse")]
        System.IAsyncResult BeginBexecuteProc(string userid, string procName, System.AsyncCallback callback, object asyncState);
        
        string EndBexecuteProc(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BexecuteProcNoPara", ReplyAction="http://tempuri.org/IDBHelper/BexecuteProcNoParaResponse")]
        string BexecuteProcNoPara(string userid, string procName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BexecuteProcNoPara", ReplyAction="http://tempuri.org/IDBHelper/BexecuteProcNoParaResponse")]
        System.IAsyncResult BeginBexecuteProcNoPara(string userid, string procName, System.AsyncCallback callback, object asyncState);
        
        string EndBexecuteProcNoPara(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BexecuteProcWithBackPara", ReplyAction="http://tempuri.org/IDBHelper/BexecuteProcWithBackParaResponse")]
        string BexecuteProcWithBackPara(string userid, string procName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BexecuteProcWithBackPara", ReplyAction="http://tempuri.org/IDBHelper/BexecuteProcWithBackParaResponse")]
        System.IAsyncResult BeginBexecuteProcWithBackPara(string userid, string procName, System.AsyncCallback callback, object asyncState);
        
        string EndBexecuteProcWithBackPara(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BInsertTransDetailProc", ReplyAction="http://tempuri.org/IDBHelper/BInsertTransDetailProcResponse")]
        string BInsertTransDetailProc(string userid, string procName, string xmlStr);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BInsertTransDetailProc", ReplyAction="http://tempuri.org/IDBHelper/BInsertTransDetailProcResponse")]
        System.IAsyncResult BeginBInsertTransDetailProc(string userid, string procName, string xmlStr, System.AsyncCallback callback, object asyncState);
        
        string EndBInsertTransDetailProc(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/testGetTableProc", ReplyAction="http://tempuri.org/IDBHelper/testGetTableProcResponse")]
        string testGetTableProc();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/testGetTableProc", ReplyAction="http://tempuri.org/IDBHelper/testGetTableProcResponse")]
        System.IAsyncResult BegintestGetTableProc(System.AsyncCallback callback, object asyncState);
        
        string EndtestGetTableProc(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BexcuteSql", ReplyAction="http://tempuri.org/IDBHelper/BexcuteSqlResponse")]
        string BexcuteSql(string userid, string sql);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BexcuteSql", ReplyAction="http://tempuri.org/IDBHelper/BexcuteSqlResponse")]
        System.IAsyncResult BeginBexcuteSql(string userid, string sql, System.AsyncCallback callback, object asyncState);
        
        string EndBexcuteSql(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BgetAllVehicleWithRight", ReplyAction="http://tempuri.org/IDBHelper/BgetAllVehicleWithRightResponse")]
        string BgetAllVehicleWithRight(string userid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BgetAllVehicleWithRight", ReplyAction="http://tempuri.org/IDBHelper/BgetAllVehicleWithRightResponse")]
        System.IAsyncResult BeginBgetAllVehicleWithRight(string userid, System.AsyncCallback callback, object asyncState);
        
        string EndBgetAllVehicleWithRight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BgetTreeVehicleWithRight", ReplyAction="http://tempuri.org/IDBHelper/BgetTreeVehicleWithRightResponse")]
        string BgetTreeVehicleWithRight(string userid);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BgetTreeVehicleWithRight", ReplyAction="http://tempuri.org/IDBHelper/BgetTreeVehicleWithRightResponse")]
        System.IAsyncResult BeginBgetTreeVehicleWithRight(string userid, System.AsyncCallback callback, object asyncState);
        
        string EndBgetTreeVehicleWithRight(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/BInsertIntoMsgGroup", ReplyAction="http://tempuri.org/IDBHelper/BInsertIntoMsgGroupResponse")]
        string BInsertIntoMsgGroup(string GroupNum_In, string GroupName_In, string GroupFounder_In, string FMemo_In);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/BInsertIntoMsgGroup", ReplyAction="http://tempuri.org/IDBHelper/BInsertIntoMsgGroupResponse")]
        System.IAsyncResult BeginBInsertIntoMsgGroup(string GroupNum_In, string GroupName_In, string GroupFounder_In, string FMemo_In, System.AsyncCallback callback, object asyncState);
        
        string EndBInsertIntoMsgGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/GgpsTranslate2Baidu", ReplyAction="http://tempuri.org/IDBHelper/GgpsTranslate2BaiduResponse")]
        string GgpsTranslate2Baidu(string lng, string lat, string flag);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/GgpsTranslate2Baidu", ReplyAction="http://tempuri.org/IDBHelper/GgpsTranslate2BaiduResponse")]
        System.IAsyncResult BeginGgpsTranslate2Baidu(string lng, string lat, string flag, System.AsyncCallback callback, object asyncState);
        
        string EndGgpsTranslate2Baidu(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDBHelper/GgpsTranslate2BaiduPoi", ReplyAction="http://tempuri.org/IDBHelper/GgpsTranslate2BaiduPoiResponse")]
        string GgpsTranslate2BaiduPoi(string lng, string lat);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDBHelper/GgpsTranslate2BaiduPoi", ReplyAction="http://tempuri.org/IDBHelper/GgpsTranslate2BaiduPoiResponse")]
        System.IAsyncResult BeginGgpsTranslate2BaiduPoi(string lng, string lat, System.AsyncCallback callback, object asyncState);
        
        string EndGgpsTranslate2BaiduPoi(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDBHelperChannel : VehicleGPS.DBWCFServices.IDBHelper, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YExecuteSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public YExecuteSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YExecuteHisCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public YExecuteHisCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YExecuteDBExitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public YExecuteDBExitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class YExecuteReportSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public YExecuteReportSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BexecuteProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BexecuteProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BexecuteProcNoParaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BexecuteProcNoParaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BexecuteProcWithBackParaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BexecuteProcWithBackParaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BInsertTransDetailProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BInsertTransDetailProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class testGetTableProcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public testGetTableProcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BexcuteSqlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BexcuteSqlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BgetAllVehicleWithRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BgetAllVehicleWithRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BgetTreeVehicleWithRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BgetTreeVehicleWithRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BInsertIntoMsgGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BInsertIntoMsgGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GgpsTranslate2BaiduCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GgpsTranslate2BaiduCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GgpsTranslate2BaiduPoiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GgpsTranslate2BaiduPoiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DBHelperClient : System.ServiceModel.ClientBase<VehicleGPS.DBWCFServices.IDBHelper>, VehicleGPS.DBWCFServices.IDBHelper {
        
        private BeginOperationDelegate onBeginYExecuteSqlDelegate;
        
        private EndOperationDelegate onEndYExecuteSqlDelegate;
        
        private System.Threading.SendOrPostCallback onYExecuteSqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginYExecuteHisDelegate;
        
        private EndOperationDelegate onEndYExecuteHisDelegate;
        
        private System.Threading.SendOrPostCallback onYExecuteHisCompletedDelegate;
        
        private BeginOperationDelegate onBeginYExecuteDBExitsDelegate;
        
        private EndOperationDelegate onEndYExecuteDBExitsDelegate;
        
        private System.Threading.SendOrPostCallback onYExecuteDBExitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginYExecuteReportSqlDelegate;
        
        private EndOperationDelegate onEndYExecuteReportSqlDelegate;
        
        private System.Threading.SendOrPostCallback onYExecuteReportSqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginBexecuteProcDelegate;
        
        private EndOperationDelegate onEndBexecuteProcDelegate;
        
        private System.Threading.SendOrPostCallback onBexecuteProcCompletedDelegate;
        
        private BeginOperationDelegate onBeginBexecuteProcNoParaDelegate;
        
        private EndOperationDelegate onEndBexecuteProcNoParaDelegate;
        
        private System.Threading.SendOrPostCallback onBexecuteProcNoParaCompletedDelegate;
        
        private BeginOperationDelegate onBeginBexecuteProcWithBackParaDelegate;
        
        private EndOperationDelegate onEndBexecuteProcWithBackParaDelegate;
        
        private System.Threading.SendOrPostCallback onBexecuteProcWithBackParaCompletedDelegate;
        
        private BeginOperationDelegate onBeginBInsertTransDetailProcDelegate;
        
        private EndOperationDelegate onEndBInsertTransDetailProcDelegate;
        
        private System.Threading.SendOrPostCallback onBInsertTransDetailProcCompletedDelegate;
        
        private BeginOperationDelegate onBegintestGetTableProcDelegate;
        
        private EndOperationDelegate onEndtestGetTableProcDelegate;
        
        private System.Threading.SendOrPostCallback ontestGetTableProcCompletedDelegate;
        
        private BeginOperationDelegate onBeginBexcuteSqlDelegate;
        
        private EndOperationDelegate onEndBexcuteSqlDelegate;
        
        private System.Threading.SendOrPostCallback onBexcuteSqlCompletedDelegate;
        
        private BeginOperationDelegate onBeginBgetAllVehicleWithRightDelegate;
        
        private EndOperationDelegate onEndBgetAllVehicleWithRightDelegate;
        
        private System.Threading.SendOrPostCallback onBgetAllVehicleWithRightCompletedDelegate;
        
        private BeginOperationDelegate onBeginBgetTreeVehicleWithRightDelegate;
        
        private EndOperationDelegate onEndBgetTreeVehicleWithRightDelegate;
        
        private System.Threading.SendOrPostCallback onBgetTreeVehicleWithRightCompletedDelegate;
        
        private BeginOperationDelegate onBeginBInsertIntoMsgGroupDelegate;
        
        private EndOperationDelegate onEndBInsertIntoMsgGroupDelegate;
        
        private System.Threading.SendOrPostCallback onBInsertIntoMsgGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginGgpsTranslate2BaiduDelegate;
        
        private EndOperationDelegate onEndGgpsTranslate2BaiduDelegate;
        
        private System.Threading.SendOrPostCallback onGgpsTranslate2BaiduCompletedDelegate;
        
        private BeginOperationDelegate onBeginGgpsTranslate2BaiduPoiDelegate;
        
        private EndOperationDelegate onEndGgpsTranslate2BaiduPoiDelegate;
        
        private System.Threading.SendOrPostCallback onGgpsTranslate2BaiduPoiCompletedDelegate;
        
        public DBHelperClient() {
        }
        
        public DBHelperClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DBHelperClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBHelperClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DBHelperClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<YExecuteSqlCompletedEventArgs> YExecuteSqlCompleted;
        
        public event System.EventHandler<YExecuteHisCompletedEventArgs> YExecuteHisCompleted;
        
        public event System.EventHandler<YExecuteDBExitsCompletedEventArgs> YExecuteDBExitsCompleted;
        
        public event System.EventHandler<YExecuteReportSqlCompletedEventArgs> YExecuteReportSqlCompleted;
        
        public event System.EventHandler<BexecuteProcCompletedEventArgs> BexecuteProcCompleted;
        
        public event System.EventHandler<BexecuteProcNoParaCompletedEventArgs> BexecuteProcNoParaCompleted;
        
        public event System.EventHandler<BexecuteProcWithBackParaCompletedEventArgs> BexecuteProcWithBackParaCompleted;
        
        public event System.EventHandler<BInsertTransDetailProcCompletedEventArgs> BInsertTransDetailProcCompleted;
        
        public event System.EventHandler<testGetTableProcCompletedEventArgs> testGetTableProcCompleted;
        
        public event System.EventHandler<BexcuteSqlCompletedEventArgs> BexcuteSqlCompleted;
        
        public event System.EventHandler<BgetAllVehicleWithRightCompletedEventArgs> BgetAllVehicleWithRightCompleted;
        
        public event System.EventHandler<BgetTreeVehicleWithRightCompletedEventArgs> BgetTreeVehicleWithRightCompleted;
        
        public event System.EventHandler<BInsertIntoMsgGroupCompletedEventArgs> BInsertIntoMsgGroupCompleted;
        
        public event System.EventHandler<GgpsTranslate2BaiduCompletedEventArgs> GgpsTranslate2BaiduCompleted;
        
        public event System.EventHandler<GgpsTranslate2BaiduPoiCompletedEventArgs> GgpsTranslate2BaiduPoiCompleted;
        
        public string YExecuteSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql) {
            return base.Channel.YExecuteSql(userid, starttime, endtime, sql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginYExecuteSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginYExecuteSql(userid, starttime, endtime, sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndYExecuteSql(System.IAsyncResult result) {
            return base.Channel.EndYExecuteSql(result);
        }
        
        private System.IAsyncResult OnBeginYExecuteSql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            System.DateTime starttime = ((System.DateTime)(inValues[1]));
            System.DateTime endtime = ((System.DateTime)(inValues[2]));
            string sql = ((string)(inValues[3]));
            return this.BeginYExecuteSql(userid, starttime, endtime, sql, callback, asyncState);
        }
        
        private object[] OnEndYExecuteSql(System.IAsyncResult result) {
            string retVal = this.EndYExecuteSql(result);
            return new object[] {
                    retVal};
        }
        
        private void OnYExecuteSqlCompleted(object state) {
            if ((this.YExecuteSqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.YExecuteSqlCompleted(this, new YExecuteSqlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void YExecuteSqlAsync(string userid, System.DateTime starttime, System.DateTime endtime, string sql) {
            this.YExecuteSqlAsync(userid, starttime, endtime, sql, null);
        }
        
        public void YExecuteSqlAsync(string userid, System.DateTime starttime, System.DateTime endtime, string sql, object userState) {
            if ((this.onBeginYExecuteSqlDelegate == null)) {
                this.onBeginYExecuteSqlDelegate = new BeginOperationDelegate(this.OnBeginYExecuteSql);
            }
            if ((this.onEndYExecuteSqlDelegate == null)) {
                this.onEndYExecuteSqlDelegate = new EndOperationDelegate(this.OnEndYExecuteSql);
            }
            if ((this.onYExecuteSqlCompletedDelegate == null)) {
                this.onYExecuteSqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnYExecuteSqlCompleted);
            }
            base.InvokeAsync(this.onBeginYExecuteSqlDelegate, new object[] {
                        userid,
                        starttime,
                        endtime,
                        sql}, this.onEndYExecuteSqlDelegate, this.onYExecuteSqlCompletedDelegate, userState);
        }
        
        public string YExecuteHis(string userid, System.DateTime starttime, System.DateTime endtime, string sim) {
            return base.Channel.YExecuteHis(userid, starttime, endtime, sim);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginYExecuteHis(string userid, System.DateTime starttime, System.DateTime endtime, string sim, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginYExecuteHis(userid, starttime, endtime, sim, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndYExecuteHis(System.IAsyncResult result) {
            return base.Channel.EndYExecuteHis(result);
        }
        
        private System.IAsyncResult OnBeginYExecuteHis(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            System.DateTime starttime = ((System.DateTime)(inValues[1]));
            System.DateTime endtime = ((System.DateTime)(inValues[2]));
            string sim = ((string)(inValues[3]));
            return this.BeginYExecuteHis(userid, starttime, endtime, sim, callback, asyncState);
        }
        
        private object[] OnEndYExecuteHis(System.IAsyncResult result) {
            string retVal = this.EndYExecuteHis(result);
            return new object[] {
                    retVal};
        }
        
        private void OnYExecuteHisCompleted(object state) {
            if ((this.YExecuteHisCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.YExecuteHisCompleted(this, new YExecuteHisCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void YExecuteHisAsync(string userid, System.DateTime starttime, System.DateTime endtime, string sim) {
            this.YExecuteHisAsync(userid, starttime, endtime, sim, null);
        }
        
        public void YExecuteHisAsync(string userid, System.DateTime starttime, System.DateTime endtime, string sim, object userState) {
            if ((this.onBeginYExecuteHisDelegate == null)) {
                this.onBeginYExecuteHisDelegate = new BeginOperationDelegate(this.OnBeginYExecuteHis);
            }
            if ((this.onEndYExecuteHisDelegate == null)) {
                this.onEndYExecuteHisDelegate = new EndOperationDelegate(this.OnEndYExecuteHis);
            }
            if ((this.onYExecuteHisCompletedDelegate == null)) {
                this.onYExecuteHisCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnYExecuteHisCompleted);
            }
            base.InvokeAsync(this.onBeginYExecuteHisDelegate, new object[] {
                        userid,
                        starttime,
                        endtime,
                        sim}, this.onEndYExecuteHisDelegate, this.onYExecuteHisCompletedDelegate, userState);
        }
        
        public string YExecuteDBExits(System.DateTime monthtime) {
            return base.Channel.YExecuteDBExits(monthtime);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginYExecuteDBExits(System.DateTime monthtime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginYExecuteDBExits(monthtime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndYExecuteDBExits(System.IAsyncResult result) {
            return base.Channel.EndYExecuteDBExits(result);
        }
        
        private System.IAsyncResult OnBeginYExecuteDBExits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime monthtime = ((System.DateTime)(inValues[0]));
            return this.BeginYExecuteDBExits(monthtime, callback, asyncState);
        }
        
        private object[] OnEndYExecuteDBExits(System.IAsyncResult result) {
            string retVal = this.EndYExecuteDBExits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnYExecuteDBExitsCompleted(object state) {
            if ((this.YExecuteDBExitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.YExecuteDBExitsCompleted(this, new YExecuteDBExitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void YExecuteDBExitsAsync(System.DateTime monthtime) {
            this.YExecuteDBExitsAsync(monthtime, null);
        }
        
        public void YExecuteDBExitsAsync(System.DateTime monthtime, object userState) {
            if ((this.onBeginYExecuteDBExitsDelegate == null)) {
                this.onBeginYExecuteDBExitsDelegate = new BeginOperationDelegate(this.OnBeginYExecuteDBExits);
            }
            if ((this.onEndYExecuteDBExitsDelegate == null)) {
                this.onEndYExecuteDBExitsDelegate = new EndOperationDelegate(this.OnEndYExecuteDBExits);
            }
            if ((this.onYExecuteDBExitsCompletedDelegate == null)) {
                this.onYExecuteDBExitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnYExecuteDBExitsCompleted);
            }
            base.InvokeAsync(this.onBeginYExecuteDBExitsDelegate, new object[] {
                        monthtime}, this.onEndYExecuteDBExitsDelegate, this.onYExecuteDBExitsCompletedDelegate, userState);
        }
        
        public string YExecuteReportSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql, string isGeo) {
            return base.Channel.YExecuteReportSql(userid, starttime, endtime, sql, isGeo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginYExecuteReportSql(string userid, System.DateTime starttime, System.DateTime endtime, string sql, string isGeo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginYExecuteReportSql(userid, starttime, endtime, sql, isGeo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndYExecuteReportSql(System.IAsyncResult result) {
            return base.Channel.EndYExecuteReportSql(result);
        }
        
        private System.IAsyncResult OnBeginYExecuteReportSql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            System.DateTime starttime = ((System.DateTime)(inValues[1]));
            System.DateTime endtime = ((System.DateTime)(inValues[2]));
            string sql = ((string)(inValues[3]));
            string isGeo = ((string)(inValues[4]));
            return this.BeginYExecuteReportSql(userid, starttime, endtime, sql, isGeo, callback, asyncState);
        }
        
        private object[] OnEndYExecuteReportSql(System.IAsyncResult result) {
            string retVal = this.EndYExecuteReportSql(result);
            return new object[] {
                    retVal};
        }
        
        private void OnYExecuteReportSqlCompleted(object state) {
            if ((this.YExecuteReportSqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.YExecuteReportSqlCompleted(this, new YExecuteReportSqlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void YExecuteReportSqlAsync(string userid, System.DateTime starttime, System.DateTime endtime, string sql, string isGeo) {
            this.YExecuteReportSqlAsync(userid, starttime, endtime, sql, isGeo, null);
        }
        
        public void YExecuteReportSqlAsync(string userid, System.DateTime starttime, System.DateTime endtime, string sql, string isGeo, object userState) {
            if ((this.onBeginYExecuteReportSqlDelegate == null)) {
                this.onBeginYExecuteReportSqlDelegate = new BeginOperationDelegate(this.OnBeginYExecuteReportSql);
            }
            if ((this.onEndYExecuteReportSqlDelegate == null)) {
                this.onEndYExecuteReportSqlDelegate = new EndOperationDelegate(this.OnEndYExecuteReportSql);
            }
            if ((this.onYExecuteReportSqlCompletedDelegate == null)) {
                this.onYExecuteReportSqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnYExecuteReportSqlCompleted);
            }
            base.InvokeAsync(this.onBeginYExecuteReportSqlDelegate, new object[] {
                        userid,
                        starttime,
                        endtime,
                        sql,
                        isGeo}, this.onEndYExecuteReportSqlDelegate, this.onYExecuteReportSqlCompletedDelegate, userState);
        }
        
        public string BexecuteProc(string userid, string procName) {
            return base.Channel.BexecuteProc(userid, procName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBexecuteProc(string userid, string procName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBexecuteProc(userid, procName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBexecuteProc(System.IAsyncResult result) {
            return base.Channel.EndBexecuteProc(result);
        }
        
        private System.IAsyncResult OnBeginBexecuteProc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            string procName = ((string)(inValues[1]));
            return this.BeginBexecuteProc(userid, procName, callback, asyncState);
        }
        
        private object[] OnEndBexecuteProc(System.IAsyncResult result) {
            string retVal = this.EndBexecuteProc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBexecuteProcCompleted(object state) {
            if ((this.BexecuteProcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BexecuteProcCompleted(this, new BexecuteProcCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BexecuteProcAsync(string userid, string procName) {
            this.BexecuteProcAsync(userid, procName, null);
        }
        
        public void BexecuteProcAsync(string userid, string procName, object userState) {
            if ((this.onBeginBexecuteProcDelegate == null)) {
                this.onBeginBexecuteProcDelegate = new BeginOperationDelegate(this.OnBeginBexecuteProc);
            }
            if ((this.onEndBexecuteProcDelegate == null)) {
                this.onEndBexecuteProcDelegate = new EndOperationDelegate(this.OnEndBexecuteProc);
            }
            if ((this.onBexecuteProcCompletedDelegate == null)) {
                this.onBexecuteProcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBexecuteProcCompleted);
            }
            base.InvokeAsync(this.onBeginBexecuteProcDelegate, new object[] {
                        userid,
                        procName}, this.onEndBexecuteProcDelegate, this.onBexecuteProcCompletedDelegate, userState);
        }
        
        public string BexecuteProcNoPara(string userid, string procName) {
            return base.Channel.BexecuteProcNoPara(userid, procName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBexecuteProcNoPara(string userid, string procName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBexecuteProcNoPara(userid, procName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBexecuteProcNoPara(System.IAsyncResult result) {
            return base.Channel.EndBexecuteProcNoPara(result);
        }
        
        private System.IAsyncResult OnBeginBexecuteProcNoPara(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            string procName = ((string)(inValues[1]));
            return this.BeginBexecuteProcNoPara(userid, procName, callback, asyncState);
        }
        
        private object[] OnEndBexecuteProcNoPara(System.IAsyncResult result) {
            string retVal = this.EndBexecuteProcNoPara(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBexecuteProcNoParaCompleted(object state) {
            if ((this.BexecuteProcNoParaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BexecuteProcNoParaCompleted(this, new BexecuteProcNoParaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BexecuteProcNoParaAsync(string userid, string procName) {
            this.BexecuteProcNoParaAsync(userid, procName, null);
        }
        
        public void BexecuteProcNoParaAsync(string userid, string procName, object userState) {
            if ((this.onBeginBexecuteProcNoParaDelegate == null)) {
                this.onBeginBexecuteProcNoParaDelegate = new BeginOperationDelegate(this.OnBeginBexecuteProcNoPara);
            }
            if ((this.onEndBexecuteProcNoParaDelegate == null)) {
                this.onEndBexecuteProcNoParaDelegate = new EndOperationDelegate(this.OnEndBexecuteProcNoPara);
            }
            if ((this.onBexecuteProcNoParaCompletedDelegate == null)) {
                this.onBexecuteProcNoParaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBexecuteProcNoParaCompleted);
            }
            base.InvokeAsync(this.onBeginBexecuteProcNoParaDelegate, new object[] {
                        userid,
                        procName}, this.onEndBexecuteProcNoParaDelegate, this.onBexecuteProcNoParaCompletedDelegate, userState);
        }
        
        public string BexecuteProcWithBackPara(string userid, string procName) {
            return base.Channel.BexecuteProcWithBackPara(userid, procName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBexecuteProcWithBackPara(string userid, string procName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBexecuteProcWithBackPara(userid, procName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBexecuteProcWithBackPara(System.IAsyncResult result) {
            return base.Channel.EndBexecuteProcWithBackPara(result);
        }
        
        private System.IAsyncResult OnBeginBexecuteProcWithBackPara(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            string procName = ((string)(inValues[1]));
            return this.BeginBexecuteProcWithBackPara(userid, procName, callback, asyncState);
        }
        
        private object[] OnEndBexecuteProcWithBackPara(System.IAsyncResult result) {
            string retVal = this.EndBexecuteProcWithBackPara(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBexecuteProcWithBackParaCompleted(object state) {
            if ((this.BexecuteProcWithBackParaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BexecuteProcWithBackParaCompleted(this, new BexecuteProcWithBackParaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BexecuteProcWithBackParaAsync(string userid, string procName) {
            this.BexecuteProcWithBackParaAsync(userid, procName, null);
        }
        
        public void BexecuteProcWithBackParaAsync(string userid, string procName, object userState) {
            if ((this.onBeginBexecuteProcWithBackParaDelegate == null)) {
                this.onBeginBexecuteProcWithBackParaDelegate = new BeginOperationDelegate(this.OnBeginBexecuteProcWithBackPara);
            }
            if ((this.onEndBexecuteProcWithBackParaDelegate == null)) {
                this.onEndBexecuteProcWithBackParaDelegate = new EndOperationDelegate(this.OnEndBexecuteProcWithBackPara);
            }
            if ((this.onBexecuteProcWithBackParaCompletedDelegate == null)) {
                this.onBexecuteProcWithBackParaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBexecuteProcWithBackParaCompleted);
            }
            base.InvokeAsync(this.onBeginBexecuteProcWithBackParaDelegate, new object[] {
                        userid,
                        procName}, this.onEndBexecuteProcWithBackParaDelegate, this.onBexecuteProcWithBackParaCompletedDelegate, userState);
        }
        
        public string BInsertTransDetailProc(string userid, string procName, string xmlStr) {
            return base.Channel.BInsertTransDetailProc(userid, procName, xmlStr);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBInsertTransDetailProc(string userid, string procName, string xmlStr, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBInsertTransDetailProc(userid, procName, xmlStr, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBInsertTransDetailProc(System.IAsyncResult result) {
            return base.Channel.EndBInsertTransDetailProc(result);
        }
        
        private System.IAsyncResult OnBeginBInsertTransDetailProc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            string procName = ((string)(inValues[1]));
            string xmlStr = ((string)(inValues[2]));
            return this.BeginBInsertTransDetailProc(userid, procName, xmlStr, callback, asyncState);
        }
        
        private object[] OnEndBInsertTransDetailProc(System.IAsyncResult result) {
            string retVal = this.EndBInsertTransDetailProc(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBInsertTransDetailProcCompleted(object state) {
            if ((this.BInsertTransDetailProcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BInsertTransDetailProcCompleted(this, new BInsertTransDetailProcCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BInsertTransDetailProcAsync(string userid, string procName, string xmlStr) {
            this.BInsertTransDetailProcAsync(userid, procName, xmlStr, null);
        }
        
        public void BInsertTransDetailProcAsync(string userid, string procName, string xmlStr, object userState) {
            if ((this.onBeginBInsertTransDetailProcDelegate == null)) {
                this.onBeginBInsertTransDetailProcDelegate = new BeginOperationDelegate(this.OnBeginBInsertTransDetailProc);
            }
            if ((this.onEndBInsertTransDetailProcDelegate == null)) {
                this.onEndBInsertTransDetailProcDelegate = new EndOperationDelegate(this.OnEndBInsertTransDetailProc);
            }
            if ((this.onBInsertTransDetailProcCompletedDelegate == null)) {
                this.onBInsertTransDetailProcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBInsertTransDetailProcCompleted);
            }
            base.InvokeAsync(this.onBeginBInsertTransDetailProcDelegate, new object[] {
                        userid,
                        procName,
                        xmlStr}, this.onEndBInsertTransDetailProcDelegate, this.onBInsertTransDetailProcCompletedDelegate, userState);
        }
        
        public string testGetTableProc() {
            return base.Channel.testGetTableProc();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BegintestGetTableProc(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegintestGetTableProc(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndtestGetTableProc(System.IAsyncResult result) {
            return base.Channel.EndtestGetTableProc(result);
        }
        
        private System.IAsyncResult OnBegintestGetTableProc(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BegintestGetTableProc(callback, asyncState);
        }
        
        private object[] OnEndtestGetTableProc(System.IAsyncResult result) {
            string retVal = this.EndtestGetTableProc(result);
            return new object[] {
                    retVal};
        }
        
        private void OntestGetTableProcCompleted(object state) {
            if ((this.testGetTableProcCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.testGetTableProcCompleted(this, new testGetTableProcCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void testGetTableProcAsync() {
            this.testGetTableProcAsync(null);
        }
        
        public void testGetTableProcAsync(object userState) {
            if ((this.onBegintestGetTableProcDelegate == null)) {
                this.onBegintestGetTableProcDelegate = new BeginOperationDelegate(this.OnBegintestGetTableProc);
            }
            if ((this.onEndtestGetTableProcDelegate == null)) {
                this.onEndtestGetTableProcDelegate = new EndOperationDelegate(this.OnEndtestGetTableProc);
            }
            if ((this.ontestGetTableProcCompletedDelegate == null)) {
                this.ontestGetTableProcCompletedDelegate = new System.Threading.SendOrPostCallback(this.OntestGetTableProcCompleted);
            }
            base.InvokeAsync(this.onBegintestGetTableProcDelegate, null, this.onEndtestGetTableProcDelegate, this.ontestGetTableProcCompletedDelegate, userState);
        }
        
        public string BexcuteSql(string userid, string sql) {
            return base.Channel.BexcuteSql(userid, sql);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBexcuteSql(string userid, string sql, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBexcuteSql(userid, sql, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBexcuteSql(System.IAsyncResult result) {
            return base.Channel.EndBexcuteSql(result);
        }
        
        private System.IAsyncResult OnBeginBexcuteSql(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            string sql = ((string)(inValues[1]));
            return this.BeginBexcuteSql(userid, sql, callback, asyncState);
        }
        
        private object[] OnEndBexcuteSql(System.IAsyncResult result) {
            string retVal = this.EndBexcuteSql(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBexcuteSqlCompleted(object state) {
            if ((this.BexcuteSqlCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BexcuteSqlCompleted(this, new BexcuteSqlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BexcuteSqlAsync(string userid, string sql) {
            this.BexcuteSqlAsync(userid, sql, null);
        }
        
        public void BexcuteSqlAsync(string userid, string sql, object userState) {
            if ((this.onBeginBexcuteSqlDelegate == null)) {
                this.onBeginBexcuteSqlDelegate = new BeginOperationDelegate(this.OnBeginBexcuteSql);
            }
            if ((this.onEndBexcuteSqlDelegate == null)) {
                this.onEndBexcuteSqlDelegate = new EndOperationDelegate(this.OnEndBexcuteSql);
            }
            if ((this.onBexcuteSqlCompletedDelegate == null)) {
                this.onBexcuteSqlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBexcuteSqlCompleted);
            }
            base.InvokeAsync(this.onBeginBexcuteSqlDelegate, new object[] {
                        userid,
                        sql}, this.onEndBexcuteSqlDelegate, this.onBexcuteSqlCompletedDelegate, userState);
        }
        
        public string BgetAllVehicleWithRight(string userid) {
            return base.Channel.BgetAllVehicleWithRight(userid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBgetAllVehicleWithRight(string userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBgetAllVehicleWithRight(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBgetAllVehicleWithRight(System.IAsyncResult result) {
            return base.Channel.EndBgetAllVehicleWithRight(result);
        }
        
        private System.IAsyncResult OnBeginBgetAllVehicleWithRight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            return this.BeginBgetAllVehicleWithRight(userid, callback, asyncState);
        }
        
        private object[] OnEndBgetAllVehicleWithRight(System.IAsyncResult result) {
            string retVal = this.EndBgetAllVehicleWithRight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBgetAllVehicleWithRightCompleted(object state) {
            if ((this.BgetAllVehicleWithRightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BgetAllVehicleWithRightCompleted(this, new BgetAllVehicleWithRightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BgetAllVehicleWithRightAsync(string userid) {
            this.BgetAllVehicleWithRightAsync(userid, null);
        }
        
        public void BgetAllVehicleWithRightAsync(string userid, object userState) {
            if ((this.onBeginBgetAllVehicleWithRightDelegate == null)) {
                this.onBeginBgetAllVehicleWithRightDelegate = new BeginOperationDelegate(this.OnBeginBgetAllVehicleWithRight);
            }
            if ((this.onEndBgetAllVehicleWithRightDelegate == null)) {
                this.onEndBgetAllVehicleWithRightDelegate = new EndOperationDelegate(this.OnEndBgetAllVehicleWithRight);
            }
            if ((this.onBgetAllVehicleWithRightCompletedDelegate == null)) {
                this.onBgetAllVehicleWithRightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBgetAllVehicleWithRightCompleted);
            }
            base.InvokeAsync(this.onBeginBgetAllVehicleWithRightDelegate, new object[] {
                        userid}, this.onEndBgetAllVehicleWithRightDelegate, this.onBgetAllVehicleWithRightCompletedDelegate, userState);
        }
        
        public string BgetTreeVehicleWithRight(string userid) {
            return base.Channel.BgetTreeVehicleWithRight(userid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBgetTreeVehicleWithRight(string userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBgetTreeVehicleWithRight(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBgetTreeVehicleWithRight(System.IAsyncResult result) {
            return base.Channel.EndBgetTreeVehicleWithRight(result);
        }
        
        private System.IAsyncResult OnBeginBgetTreeVehicleWithRight(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            return this.BeginBgetTreeVehicleWithRight(userid, callback, asyncState);
        }
        
        private object[] OnEndBgetTreeVehicleWithRight(System.IAsyncResult result) {
            string retVal = this.EndBgetTreeVehicleWithRight(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBgetTreeVehicleWithRightCompleted(object state) {
            if ((this.BgetTreeVehicleWithRightCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BgetTreeVehicleWithRightCompleted(this, new BgetTreeVehicleWithRightCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BgetTreeVehicleWithRightAsync(string userid) {
            this.BgetTreeVehicleWithRightAsync(userid, null);
        }
        
        public void BgetTreeVehicleWithRightAsync(string userid, object userState) {
            if ((this.onBeginBgetTreeVehicleWithRightDelegate == null)) {
                this.onBeginBgetTreeVehicleWithRightDelegate = new BeginOperationDelegate(this.OnBeginBgetTreeVehicleWithRight);
            }
            if ((this.onEndBgetTreeVehicleWithRightDelegate == null)) {
                this.onEndBgetTreeVehicleWithRightDelegate = new EndOperationDelegate(this.OnEndBgetTreeVehicleWithRight);
            }
            if ((this.onBgetTreeVehicleWithRightCompletedDelegate == null)) {
                this.onBgetTreeVehicleWithRightCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBgetTreeVehicleWithRightCompleted);
            }
            base.InvokeAsync(this.onBeginBgetTreeVehicleWithRightDelegate, new object[] {
                        userid}, this.onEndBgetTreeVehicleWithRightDelegate, this.onBgetTreeVehicleWithRightCompletedDelegate, userState);
        }
        
        public string BInsertIntoMsgGroup(string GroupNum_In, string GroupName_In, string GroupFounder_In, string FMemo_In) {
            return base.Channel.BInsertIntoMsgGroup(GroupNum_In, GroupName_In, GroupFounder_In, FMemo_In);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBInsertIntoMsgGroup(string GroupNum_In, string GroupName_In, string GroupFounder_In, string FMemo_In, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBInsertIntoMsgGroup(GroupNum_In, GroupName_In, GroupFounder_In, FMemo_In, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndBInsertIntoMsgGroup(System.IAsyncResult result) {
            return base.Channel.EndBInsertIntoMsgGroup(result);
        }
        
        private System.IAsyncResult OnBeginBInsertIntoMsgGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string GroupNum_In = ((string)(inValues[0]));
            string GroupName_In = ((string)(inValues[1]));
            string GroupFounder_In = ((string)(inValues[2]));
            string FMemo_In = ((string)(inValues[3]));
            return this.BeginBInsertIntoMsgGroup(GroupNum_In, GroupName_In, GroupFounder_In, FMemo_In, callback, asyncState);
        }
        
        private object[] OnEndBInsertIntoMsgGroup(System.IAsyncResult result) {
            string retVal = this.EndBInsertIntoMsgGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBInsertIntoMsgGroupCompleted(object state) {
            if ((this.BInsertIntoMsgGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BInsertIntoMsgGroupCompleted(this, new BInsertIntoMsgGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BInsertIntoMsgGroupAsync(string GroupNum_In, string GroupName_In, string GroupFounder_In, string FMemo_In) {
            this.BInsertIntoMsgGroupAsync(GroupNum_In, GroupName_In, GroupFounder_In, FMemo_In, null);
        }
        
        public void BInsertIntoMsgGroupAsync(string GroupNum_In, string GroupName_In, string GroupFounder_In, string FMemo_In, object userState) {
            if ((this.onBeginBInsertIntoMsgGroupDelegate == null)) {
                this.onBeginBInsertIntoMsgGroupDelegate = new BeginOperationDelegate(this.OnBeginBInsertIntoMsgGroup);
            }
            if ((this.onEndBInsertIntoMsgGroupDelegate == null)) {
                this.onEndBInsertIntoMsgGroupDelegate = new EndOperationDelegate(this.OnEndBInsertIntoMsgGroup);
            }
            if ((this.onBInsertIntoMsgGroupCompletedDelegate == null)) {
                this.onBInsertIntoMsgGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBInsertIntoMsgGroupCompleted);
            }
            base.InvokeAsync(this.onBeginBInsertIntoMsgGroupDelegate, new object[] {
                        GroupNum_In,
                        GroupName_In,
                        GroupFounder_In,
                        FMemo_In}, this.onEndBInsertIntoMsgGroupDelegate, this.onBInsertIntoMsgGroupCompletedDelegate, userState);
        }
        
        public string GgpsTranslate2Baidu(string lng, string lat, string flag) {
            return base.Channel.GgpsTranslate2Baidu(lng, lat, flag);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGgpsTranslate2Baidu(string lng, string lat, string flag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGgpsTranslate2Baidu(lng, lat, flag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGgpsTranslate2Baidu(System.IAsyncResult result) {
            return base.Channel.EndGgpsTranslate2Baidu(result);
        }
        
        private System.IAsyncResult OnBeginGgpsTranslate2Baidu(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lng = ((string)(inValues[0]));
            string lat = ((string)(inValues[1]));
            string flag = ((string)(inValues[2]));
            return this.BeginGgpsTranslate2Baidu(lng, lat, flag, callback, asyncState);
        }
        
        private object[] OnEndGgpsTranslate2Baidu(System.IAsyncResult result) {
            string retVal = this.EndGgpsTranslate2Baidu(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGgpsTranslate2BaiduCompleted(object state) {
            if ((this.GgpsTranslate2BaiduCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GgpsTranslate2BaiduCompleted(this, new GgpsTranslate2BaiduCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GgpsTranslate2BaiduAsync(string lng, string lat, string flag) {
            this.GgpsTranslate2BaiduAsync(lng, lat, flag, null);
        }
        
        public void GgpsTranslate2BaiduAsync(string lng, string lat, string flag, object userState) {
            if ((this.onBeginGgpsTranslate2BaiduDelegate == null)) {
                this.onBeginGgpsTranslate2BaiduDelegate = new BeginOperationDelegate(this.OnBeginGgpsTranslate2Baidu);
            }
            if ((this.onEndGgpsTranslate2BaiduDelegate == null)) {
                this.onEndGgpsTranslate2BaiduDelegate = new EndOperationDelegate(this.OnEndGgpsTranslate2Baidu);
            }
            if ((this.onGgpsTranslate2BaiduCompletedDelegate == null)) {
                this.onGgpsTranslate2BaiduCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGgpsTranslate2BaiduCompleted);
            }
            base.InvokeAsync(this.onBeginGgpsTranslate2BaiduDelegate, new object[] {
                        lng,
                        lat,
                        flag}, this.onEndGgpsTranslate2BaiduDelegate, this.onGgpsTranslate2BaiduCompletedDelegate, userState);
        }
        
        public string GgpsTranslate2BaiduPoi(string lng, string lat) {
            return base.Channel.GgpsTranslate2BaiduPoi(lng, lat);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGgpsTranslate2BaiduPoi(string lng, string lat, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGgpsTranslate2BaiduPoi(lng, lat, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGgpsTranslate2BaiduPoi(System.IAsyncResult result) {
            return base.Channel.EndGgpsTranslate2BaiduPoi(result);
        }
        
        private System.IAsyncResult OnBeginGgpsTranslate2BaiduPoi(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string lng = ((string)(inValues[0]));
            string lat = ((string)(inValues[1]));
            return this.BeginGgpsTranslate2BaiduPoi(lng, lat, callback, asyncState);
        }
        
        private object[] OnEndGgpsTranslate2BaiduPoi(System.IAsyncResult result) {
            string retVal = this.EndGgpsTranslate2BaiduPoi(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGgpsTranslate2BaiduPoiCompleted(object state) {
            if ((this.GgpsTranslate2BaiduPoiCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GgpsTranslate2BaiduPoiCompleted(this, new GgpsTranslate2BaiduPoiCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GgpsTranslate2BaiduPoiAsync(string lng, string lat) {
            this.GgpsTranslate2BaiduPoiAsync(lng, lat, null);
        }
        
        public void GgpsTranslate2BaiduPoiAsync(string lng, string lat, object userState) {
            if ((this.onBeginGgpsTranslate2BaiduPoiDelegate == null)) {
                this.onBeginGgpsTranslate2BaiduPoiDelegate = new BeginOperationDelegate(this.OnBeginGgpsTranslate2BaiduPoi);
            }
            if ((this.onEndGgpsTranslate2BaiduPoiDelegate == null)) {
                this.onEndGgpsTranslate2BaiduPoiDelegate = new EndOperationDelegate(this.OnEndGgpsTranslate2BaiduPoi);
            }
            if ((this.onGgpsTranslate2BaiduPoiCompletedDelegate == null)) {
                this.onGgpsTranslate2BaiduPoiCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGgpsTranslate2BaiduPoiCompleted);
            }
            base.InvokeAsync(this.onBeginGgpsTranslate2BaiduPoiDelegate, new object[] {
                        lng,
                        lat}, this.onEndGgpsTranslate2BaiduPoiDelegate, this.onGgpsTranslate2BaiduPoiCompletedDelegate, userState);
        }
    }
}
